apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        "glaciation-project.eu/energy-allocated": "{{ .Values.resources.requests.energy }}"
        "glaciation-project.eu/network-allocated": "{{ .Values.resources.requests.network }}"
        "glaciation-project.eu/energy-capacity": "{{ .Values.resources.limits.energy }}"
        "glaciation-project.eu/network-capacity": "{{ .Values.resources.limits.network }}"
      labels:
        {{- include "app.selectorLabels" . | nindent 6 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
              ephemeral-storage: "{{ .Values.resources.requests.ephemeralStorage }}"
              nvidia.com/gpu: "{{ .Values.resources.requests.nvidiaGPU}}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
              ephemeral-storage: "{{ .Values.resources.limits.ephemeralStorage }}"
              nvidia.com/gpu: "{{ .Values.resources.limits.nvidiaGPU}}"
      restartPolicy: Always
